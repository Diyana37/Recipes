@model FilterRecipeInputModel

@{
	this.ViewData["Title"] = "Всички Рецепти";
}

<style>
	.visible {
		display: block;
	}

	.hidden {
		display: none;
	}
</style>

<h1 class="text-center mb-3">Рецепти</h1>

<form method="get" asp-controller="Recipes" asp-action="FilteredWithPagination">
	<div class="row">
		<div class="col-3">
			<input type="submit" class="btn btn-primary mb-3" value="Търси" />
			<a class="btn btn-danger mb-3 ms-1" asp-controller="Recipes" asp-action="FilteredWithPagination" asp-route-mode="reset">Изчисти</a>

			<h3>Категории</h3>
			<hr />

			<div id="top-5-categories" class="visible">
				@foreach (var category in this.Model.Categories.Take(5))
				{
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="CategoryIds" value="@category.Id" id="category_@category.Id" @(this.Model.CategoryIds.Any(c => c == category.Id) ? "checked" : "")>
						<label class="form-check-label d-block text-truncate" for="category_@category.Id">
							@category.Name
						</label>
					</div>
				}

				@if (this.Model.Categories.Count() > 5)
				{
					<a id="show-more-categories" style="text-decoration: none; cursor: pointer;" class="text-primary mt-1">
						Покажи повече
					</a>
				}
			</div>

			<div id="all-categories" class="hidden">
				@foreach (var category in this.Model.Categories)
				{
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="CategoryIds" value="@category.Id" id="category_@category.Id" @(this.Model.CategoryIds.Any(c => c == category.Id) ? "checked" : "")>
						<label class="form-check-label d-block text-truncate" for="category_@category.Id">
							@category.Name
						</label>
					</div>
				}

				<a id="show-less-categories" style="text-decoration: none; cursor: pointer;" class="text-primary mt-1">
					Покажи по-малко
				</a>
			</div>

			<div class="mt-3"></div>

			<h3>Националности</h3>
			<hr />

			<div id="top-5-nationalities" class="visible">
				@foreach (var recipeNationality in this.Model.RecipeNationalities.Take(5))
				{
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="RecipeNationalityIds" value="@recipeNationality.Id" id="recipeNationality_@recipeNationality.Id" @(this.Model.RecipeNationalityIds.Any(r => r == recipeNationality.Id) ? "checked" : "")>
						<label class="form-check-label d-block text-truncate" for="recipeNationality_@recipeNationality.Id">
							@recipeNationality.Name
						</label>
					</div>
				}

				@if (this.Model.RecipeNationalities.Count() > 5)
				{
					<a id="show-more-nationalities" style="text-decoration: none; cursor: pointer;" class="text-primary mt-1">
						Покажи повече
					</a>
				}
			</div>

			<div id="all-nationalities" class="hidden">
				@foreach (var recipeNationality in this.Model.RecipeNationalities)
				{
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="RecipeNationalityIds" value="@recipeNationality.Id" id="recipeNationality_@recipeNationality.Id" @(this.Model.RecipeNationalityIds.Any(r => r == recipeNationality.Id) ? "checked" : "")>
						<label class="form-check-label d-block text-truncate" for="recipeNationality_@recipeNationality.Id">
							@recipeNationality.Name
						</label>
					</div>
				}

				<a id="show-less-nationalities" style="text-decoration: none; cursor: pointer;" class="text-primary mt-1">
					Покажи по-малко
				</a>
			</div>

			<div class="mt-3"></div>

			<h3>Типове</h3>
			<hr />

			<div id="top-5-types" class="visible">
				@foreach (var recipeType in this.Model.RecipeTypes.Take(5))
				{
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="RecipeTypeIds" value="@recipeType.Id" id="recipeType_@recipeType.Id" @(this.Model.RecipeTypeIds.Any(r => r == recipeType.Id) ? "checked" : "")>
						<label class="form-check-label d-block text-truncate" for="recipeType_@recipeType.Id">
							@recipeType.Name
						</label>
					</div>
				}

				@if (this.Model.RecipeTypes.Count() > 5)
				{
					<a id="show-more-types" style="text-decoration: none; cursor: pointer;" class="text-primary mt-1">
						Покажи повече
					</a>
				}
			</div>

			<div id="all-types" class="hidden">
				@foreach (var recipeType in this.Model.RecipeTypes)
				{
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="RecipeTypeIds" value="@recipeType.Id" id="recipeType_@recipeType.Id" @(this.Model.RecipeTypeIds.Any(r => r == recipeType.Id) ? "checked" : "")>
						<label class="form-check-label d-block text-truncate" for="recipeType_@recipeType.Id">
							@recipeType.Name
						</label>
					</div>
				}

				<a id="show-less-types" style="text-decoration: none; cursor: pointer;" class="text-primary mt-1">
					Покажи по-малко
				</a>
			</div>

			<div class="mt-3"></div>

			<h3>Продукти</h3>
			<hr />

			<div id="top-5-ingredients" class="visible">
				@foreach (var ingredient in this.Model.Ingredients.Take(5))
				{
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="IngredientIds" value="@ingredient.Id" id="ingredient_@ingredient.Id" @(this.Model.IngredientIds.Any(i => i == ingredient.Id) ? "checked" : "")>
						<label class="form-check-label d-block text-truncate" for="ingredient_@ingredient.Id">
							@ingredient.Name
						</label>
					</div>
				}

				@if (this.Model.Ingredients.Count() > 5)
				{
					<a id="show-more-ingredients" style="text-decoration: none; cursor: pointer;" class="text-primary mt-1">
						Покажи повече
					</a>
				}
			</div>

			<div id="all-ingredients" class="hidden">
				@foreach (var ingredient in this.Model.Ingredients)
				{
					<div class="form-check">
						<input class="form-check-input" type="checkbox" name="IngredientIds" value="@ingredient.Id" id="ingredient_@ingredient.Id" @(this.Model.IngredientIds.Any(i => i == ingredient.Id) ? "checked" : "")>
						<label class="form-check-label d-block text-truncate" for="ingredient_@ingredient.Id">
							@ingredient.Name
						</label>
					</div>
				}

				<a id="show-less-ingredients" style="text-decoration: none; cursor: pointer;" class="text-primary mt-1">
					Покажи по-малко
				</a>
			</div>

			<div class="mt-3"></div>

			@* <h3>Порции</h3>
			<hr />

			@foreach (var recipe in this.Model.Recipes)
			{
				<div class="form-check">
					<input class="form-check-input" type="checkbox" name="Portions" value="@recipe.Portions" id="portion_@recipe.Id" @(this.Model.Portions.Any(p => p == recipe.Portions) ? "checked" : "")>
					<label class="form-check-label d-block text-truncate" for="portion_@recipe.Id">
						@recipe.Portions
					</label>
				</div>
			} *@
		</div>

		<div class="col-9">
			<div class="row g-4">
				<div class="col-12">
					<div class="input-group mb-3">
						<input type="text" class="form-control" placeholder="Търси по име на рецепта или продукт" asp-for="SearchText">
						<button class="input-group-text" id="basic-addon2" type="submit">
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search-heart" viewBox="0 0 16 16">
								<path d="M6.5 4.482c1.664-1.673 5.825 1.254 0 5.018-5.825-3.764-1.664-6.69 0-5.018" />
								<path d="M13 6.5a6.47 6.47 0 0 1-1.258 3.844q.06.044.115.098l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1-.1-.115h.002A6.5 6.5 0 1 1 13 6.5M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11" />
							</svg>
						</button>
					</div>
				</div>

				@foreach (var item in this.Model.Recipes)
				{
					<div class="col-3">
						<a asp-controller="Recipes" asp-action="Details" asp-route-id="@item.Id" style="text-decoration: none; color: inherit;">
							<div class="card h-100 pb-3">
								@if (!string.IsNullOrWhiteSpace(item.Photo))
								{
									<img src="@item.Photo" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;">
								}
								else
								{
									<img src="https://res.cloudinary.com/du73gcrdw/image/upload/v1738519948/No-Image-Placeholder.svg_zviiyq.png" class="card-img-top" alt="@item.Name" style="height: 200px; object-fit: cover;">
								}

								<div class="card-body pb-0">
									<h3 class="card-title text-truncate" data-bs-toggle="tooltip" data-bs-placement="top" title="@item.Name">@item.Name</h3>

									<div class="d-flex" style="column-gap: 15px;">
										<div class="d-flex align-items-center justify-content-center gap-2">
											<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
												<path d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5.784 6A2.24 2.24 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.3 6.3 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5" />
											</svg>

											<span>@item.Portions</span>
										</div>

										<div class="d-flex align-items-center justify-content-center gap-2">
											<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-stopwatch-fill" viewBox="0 0 16 16">
												<path d="M6.5 0a.5.5 0 0 0 0 1H7v1.07A7.001 7.001 0 0 0 8 16a7 7 0 0 0 5.29-11.584l.013-.012.354-.354.353.354a.5.5 0 1 0 .707-.707l-1.414-1.415a.5.5 0 1 0-.707.707l.354.354-.354.354-.012.012A6.97 6.97 0 0 0 9 2.071V1h.5a.5.5 0 0 0 0-1zm2 5.6V9a.5.5 0 0 1-.5.5H4.5a.5.5 0 0 1 0-1h3V5.6a.5.5 0 1 1 1 0" />
											</svg>

											<span>@(item.PreparationTime + item.CookingTime)</span>
										</div>

										<div class="d-flex align-items-center justify-content-center gap-2">
											<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-basket-fill" viewBox="0 0 16 16">
												<path d="M5.071 1.243a.5.5 0 0 1 .858.514L3.383 6h9.234L10.07 1.757a.5.5 0 1 1 .858-.514L13.783 6H15.5a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.5.5H15v5a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V9H.5a.5.5 0 0 1-.5-.5v-2A.5.5 0 0 1 .5 6h1.717zM3.5 10.5a.5.5 0 1 0-1 0v3a.5.5 0 0 0 1 0zm2.5 0a.5.5 0 1 0-1 0v3a.5.5 0 0 0 1 0zm2.5 0a.5.5 0 1 0-1 0v3a.5.5 0 0 0 1 0zm2.5 0a.5.5 0 1 0-1 0v3a.5.5 0 0 0 1 0zm2.5 0a.5.5 0 1 0-1 0v3a.5.5 0 0 0 1 0z" />
											</svg>

											<span>@item.Ingredients.Count()</span>
										</div>
									</div>
								</div>
							</div>

						</a>
					</div>
				}
			</div>
		</div>
	</div>
</form>

@section Scripts {
	<script type="text/javascript">
		const showMoreCategories = document.querySelector("#show-more-categories");

		if (showMoreCategories) {
			showMoreCategories.addEventListener("click", function (e) {
				// Copy checked state from #top-5-categories to #all-categories
				document.querySelectorAll("#top-5-categories input[type='checkbox']").forEach((checkbox, index) => {
					const allCheckboxes = document.querySelectorAll("#all-categories input[type='checkbox']");
					if (allCheckboxes[index]) {
						allCheckboxes[index].checked = checkbox.checked;
					}
				});

				// Show all and hide top-5-categories
				document.querySelector("#top-5-categories").classList.add("hidden");
				document.querySelector("#all-categories").classList.remove("hidden");
			});
		}

		const showLess = document.querySelector("#show-less-categories");

		if (showLess) {
			showLess.addEventListener("click", function (e) {
				// Copy checked state from #all-categories to #top-5-categories
				document.querySelectorAll("#all-categories input[type='checkbox']").forEach((checkbox, index) => {
					const topCheckboxes = document.querySelectorAll("#top-5-categories input[type='checkbox']");
					if (topCheckboxes[index]) {
						topCheckboxes[index].checked = checkbox.checked;
					}
				});

				// Show top-5 and hide all
				document.querySelector("#top-5-categories").classList.remove("hidden");
				document.querySelector("#all-categories").classList.add("hidden");
			});
		}
	</script>

	<script type="text/javascript">
		const showMoreNationalities = document.querySelector("#show-more-nationalities");

		if (showMoreNationalities) {
			showMoreNationalities.addEventListener("click", function (e) {
				// Copy checked state from #top-5-nationalities to #all-nationalities
				document.querySelectorAll("#top-5-nationalities input[type='checkbox']").forEach((checkbox, index) => {
					const allCheckboxes = document.querySelectorAll("#all-nationalities input[type='checkbox']");
					if (allCheckboxes[index]) {
						allCheckboxes[index].checked = checkbox.checked;
					}
				});

				// Show all and hide top-5-nationalities
				document.querySelector("#top-5-nationalities").classList.add("hidden");
				document.querySelector("#all-nationalities").classList.remove("hidden");
			});
		}

		const showLessNationalities = document.querySelector("#show-less-nationalities");

		if (showLessNationalities) {
			showLessNationalities.addEventListener("click", function (e) {
				// Copy checked state from #all-nationalities to #top-5-nationalities
				document.querySelectorAll("#all-nationalities input[type='checkbox']").forEach((checkbox, index) => {
					const topCheckboxes = document.querySelectorAll("#top-5-nationalities input[type='checkbox']");
					if (topCheckboxes[index]) {
						topCheckboxes[index].checked = checkbox.checked;
					}
				});

				// Show top-5 and hide all
				document.querySelector("#top-5-nationalities").classList.remove("hidden");
				document.querySelector("#all-nationalities").classList.add("hidden");
			});
		}
	</script>

	<script type="text/javascript">
		const showMoreTypes = document.querySelector("#show-more-types");

		if (showMoreTypes) {
			showMoreTypes.addEventListener("click", function (e) {
				// Copy checked state from #top-5-types to #all-types
				document.querySelectorAll("#top-5-types input[type='checkbox']").forEach((checkbox, index) => {
					const allCheckboxes = document.querySelectorAll("#all-types input[type='checkbox']");
					if (allCheckboxes[index]) {
						allCheckboxes[index].checked = checkbox.checked;
					}
				});

				// Show all and hide top-5-types
				document.querySelector("#top-5-types").classList.add("hidden");
				document.querySelector("#all-types").classList.remove("hidden");
			});
		}

		const showLessTypes = document.querySelector("#show-less-types");

		if (showLessTypes) {
			showLessTypes.addEventListener("click", function (e) {
				// Copy checked state from #all-types to #top-5-types
				document.querySelectorAll("#all-types input[type='checkbox']").forEach((checkbox, index) => {
					const topCheckboxes = document.querySelectorAll("#top-5-types input[type='checkbox']");
					if (topCheckboxes[index]) {
						topCheckboxes[index].checked = checkbox.checked;
					}
				});

				// Show top-5 and hide all
				document.querySelector("#top-5-types").classList.remove("hidden");
				document.querySelector("#all-types").classList.add("hidden");
			});
		}
	</script>

	<script type="text/javascript">
		const showMoreIngredients = document.querySelector("#show-more-ingredients");

		if (showMoreIngredients) {
			showMoreIngredients.addEventListener("click", function (e) {
				// Copy checked state from #top-5-ingredients to #all-ingredients
				document.querySelectorAll("#top-5-ingredients input[type='checkbox']").forEach((checkbox, index) => {
					const allCheckboxes = document.querySelectorAll("#all-ingredients input[type='checkbox']");
					if (allCheckboxes[index]) {
						allCheckboxes[index].checked = checkbox.checked;
					}
				});

				// Show all and hide top-5-ingredients
				document.querySelector("#top-5-ingredients").classList.add("hidden");
				document.querySelector("#all-ingredients").classList.remove("hidden");
			});
		}

		const showLessIngredients = document.querySelector("#show-less-ingredients");

		if (showLessIngredients) {
			showLessIngredients.addEventListener("click", function (e) {
				// Copy checked state from #all-ingredients to #top-5-ingredients
				document.querySelectorAll("#all-ingredients input[type='checkbox']").forEach((checkbox, index) => {
					const topCheckboxes = document.querySelectorAll("#top-5-ingredients input[type='checkbox']");
					if (topCheckboxes[index]) {
						topCheckboxes[index].checked = checkbox.checked;
					}
				});

				// Show top-5 and hide all
				document.querySelector("#top-5-ingredients").classList.remove("hidden");
				document.querySelector("#all-ingredients").classList.add("hidden");
			});
		}
	</script>
}